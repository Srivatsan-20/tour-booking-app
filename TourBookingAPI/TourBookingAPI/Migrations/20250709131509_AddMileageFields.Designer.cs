// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourBookingAPI.Data;

#nullable disable

namespace TourBookingAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250709131509_AddMileageFields")]
    partial class AddMileageFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TourBookingAPI.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BusType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DropLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfBuses")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPassengers")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickupLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlacesToCover")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredRoute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalRent")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("TourBookingAPI.Models.BusExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("DriverBatta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EndingOdometer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("StartingOdometer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TripExpenseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripExpenseId");

                    b.ToTable("BusExpenses");
                });

            modelBuilder.Entity("TourBookingAPI.Models.FuelEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusExpenseId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Liters")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BusExpenseId");

                    b.ToTable("FuelEntries");
                });

            modelBuilder.Entity("TourBookingAPI.Models.OtherExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BusExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BusExpenseId");

                    b.ToTable("OtherExpenses");
                });

            modelBuilder.Entity("TourBookingAPI.Models.TripExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("TripExpenses");
                });

            modelBuilder.Entity("TourBookingAPI.Models.BusExpense", b =>
                {
                    b.HasOne("TourBookingAPI.Models.TripExpense", "TripExpense")
                        .WithMany("BusExpenses")
                        .HasForeignKey("TripExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TripExpense");
                });

            modelBuilder.Entity("TourBookingAPI.Models.FuelEntry", b =>
                {
                    b.HasOne("TourBookingAPI.Models.BusExpense", "BusExpense")
                        .WithMany("FuelEntries")
                        .HasForeignKey("BusExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusExpense");
                });

            modelBuilder.Entity("TourBookingAPI.Models.OtherExpense", b =>
                {
                    b.HasOne("TourBookingAPI.Models.BusExpense", "BusExpense")
                        .WithMany("OtherExpenses")
                        .HasForeignKey("BusExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusExpense");
                });

            modelBuilder.Entity("TourBookingAPI.Models.TripExpense", b =>
                {
                    b.HasOne("TourBookingAPI.Models.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("TourBookingAPI.Models.BusExpense", b =>
                {
                    b.Navigation("FuelEntries");

                    b.Navigation("OtherExpenses");
                });

            modelBuilder.Entity("TourBookingAPI.Models.TripExpense", b =>
                {
                    b.Navigation("BusExpenses");
                });
#pragma warning restore 612, 618
        }
    }
}
